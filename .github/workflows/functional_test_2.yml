name: Functional (pip)

on:
  push:
    branches:
      - 'main'
    paths:
      - '**.py'
      - '.github/workflows/*.yml'
      - 'pyproject.toml'
      - 'setup.py'
      - 'setup.cfg'
  pull_request:
    paths:
      - '**.py'
      - '.github/workflows/*.yml'
      - 'pyproject.toml'
      - 'setup.py'
      - 'setup.cfg'

jobs:
  basic-functional-tests-using-pip:

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.10', '3.11', '3.12' ]

    steps:
    # STEP 1: Checkout the repository AND its submodules
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Verify submodule checkout
      run: |
        echo "Listing contents of the submodule directory:"
        ls -lR ./submodules/jigsaw-python
  
    # STEP 2: Install all OS-level dependencies, including build tools
    - name: Install OS dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin cmake build-essential

    # STEP 3: Set up the correct Python version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # STEP 4: Build jigsawpy from source and install all packages
    - name: Install packages
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python ./submodules/jigsaw-python/build.py
        pip install ./submodules/jigsaw-python
        pip install .

    # STEP 5: Prepare the test data
    - name: Prepare example DEM
      run: |
        wget https://chs.coast.noaa.gov/htdata/raster2/elevation/NCEI_ninth_Topobathy_2014_8483/northeast_sandy/ncei19_n40x75_w073x75_2015v1.tif -O /tmp/fullsize_dem.tif
        gdalwarp -tr 0.0005 0.0005 -r average -overwrite /tmp/fullsize_dem.tif /tmp/test_dem.tif

    - name: 'Upload test dem'
      uses: actions/upload-artifact@v4
      with:
        name: test-dem-${{ matrix.python-version }}
        path: /tmp/test_dem.tif
        retention-days: 7

    # STEP 6: Run tests with the corrected library path logic and upload artifacts
    - name: Run geom build test
      shell: bash -l {0}
      run: |
        SITE_PACKAGES=$(python -c "import site; print(site.getsitepackages()[0])")
        LIB_FILE_PATH=$(find "${SITE_PACKAGES}" -name "libjigsaw.so")
        JIGSAW_LIB_PATH=$(dirname "${LIB_FILE_PATH}")
        export LD_LIBRARY_PATH="${JIGSAW_LIB_PATH}:${LD_LIBRARY_PATH}"
        source tests/cli/build_geom.sh

    - name: 'Upload Geom build results'
      uses: actions/upload-artifact@v4
      with:
        name: geom-build-results-${{ matrix.python-version }}
        path: test_shape
        retention-days: 7

    - name: Run hfun build test
      shell: bash -l {0}
      run: |
        SITE_PACKAGES=$(python -c "import site; print(site.getsitepackages()[0])")
        LIB_FILE_PATH=$(find "${SITE_PACKAGES}" -name "libjigsaw.so")
        JIGSAW_LIB_PATH=$(dirname "${LIB_FILE_PATH}")
        export LD_LIBRARY_PATH="${JIGSAW_LIB_PATH}:${LD_LIBRARY_PATH}"
        source tests/cli/build_hfun.sh

    - name: 'Upload Hfun build results'
      uses: actions/upload-artifact@v4
      with:
        name: hfun-build-results-${{ matrix.python-version }}
        path: test.2dm
        retention-days: 7

    - name: Run remesh test
      shell: bash -l {0}
      run: |
        SITE_PACKAGES=$(python -c "import site; print(site.getsitepackages()[0])")
        LIB_FILE_PATH=$(find "${SITE_PACKAGES}" -name "libjigsaw.so")
        JIGSAW_LIB_PATH=$(dirname "${LIB_FILE_PATH}")
        export LD_LIBRARY_PATH="${JIGSAW_LIB_PATH}:${LD_LIBRARY_PATH}"
        source tests/cli/remesh_by_dem.sh

    - name: 'Upload remesh results'
      uses: actions/upload-artifact@v4
      with:
        name: remesh-bydem-results-${{ matrix.python-version }}
        path: remeshed.2dm
        retention-days: 7

    - name: Run Python API tests
      shell: bash -l {0}
      run: |
        SITE_PACKAGES=$(python -c "import site; print(site.getsitepackages()[0])")
        LIB_FILE_PATH=$(find "${SITE_PACKAGES}" -name "libjigsaw.so")
        JIGSAW_LIB_PATH=$(dirname "${LIB_FILE_PATH}")
        export LD_LIBRARY_PATH="${JIGSAW_LIB_PATH}:${LD_LIBRARY_PATH}"
        python -m unittest discover tests/api -p "*.py"
